

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer

# Load dataset (assuming 'forestfires.csv' is in the current directory)
data = pd.read_csv('forestfires.csv')

# Drop non-relevant columns (if any) for linear regression
data = data.drop(['day'], axis=1)  # assuming 'day' is non-relevant for this analysis

# Separate features and target variable
y = data['temp']
x = data.drop('temp', axis=1)

# Identify categorical columns and apply one-hot encoding
c = ['month']
p = ColumnTransformer(
    transformers=[
        ('cat', OneHotEncoder(), c)
    ], remainder='passthrough'
)

x_preprocessed = p.fit_transform(x)

# Splitting data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x_preprocessed, y, test_size=0.2)

# Model initialization, fitting, and prediction
model = LinearRegression()
model.fit(x_train, y_train)
predictions = model.predict(x_test)

# Compute predictions for the entire dataset to plot the regression line
y_pred = model.predict(x_preprocessed)

# Plotting
plt.scatter(y, y_pred, color='blue', label='Predictions')
plt.plot(y, y, color='red', linewidth=1, linestyle='--', label='Perfect Prediction')  # Plotting the perfect prediction line
plt.xlabel('True Values')
plt.ylabel('Predicted Values')
plt.title('True Values vs. Predicted Values')
plt.legend()
plt.show()